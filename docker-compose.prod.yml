version: '3.3'

services:
  web:
    container_name: gallop_web
    build: 
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn gallop.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - 8000
    env_file: ./env/prod/.env
    depends_on:
      - db
  db:
    image: postgres:11.5-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: ./env/prod/.env.db
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - ./nginx/localhost.crt:/etc/nginx/localhost.crt
      - ./nginx/localhost.key:/etc/nginx/localhost.key
      - ./nginx/localhost.conf:/etc/nginx/localhost.conf
      - ./nginx/dhparam.pem:/etc/nginx/dhparam.pem
      #- ./data/certbot/conf:/etc/letsencrypt
      #- ./data/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
  elasticsearch:
    image: launcher.gcr.io/google/elasticsearch2
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
          - esdata:/usr/share/elasticsearch/data
volumes:
  postgres_data:
  esdata:
  static_volume:
  media_volume:
