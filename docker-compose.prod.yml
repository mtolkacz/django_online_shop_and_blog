version: '3.3'

services:
  web:
    container_name: gallop_web
    build: 
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn gallop.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - 8000
    env_file: ./env/prod/.env
    depends_on:
      - db
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - ./nginx/localhost.crt:/etc/nginx/localhost.crt
      - ./nginx/localhost.key:/etc/nginx/localhost.key
      - ./nginx/localhost.conf:/etc/nginx/localhost.conf
      - ./nginx/dhparam.pem:/etc/nginx/dhparam.pem
    ports:
      - "80:80"
    depends_on:
      - web
  redis:
    image: redis:latest
    environment:
      - TZ=Europe/Warsaw
  flower:
    image: mher/flower
    command: ["flower", "--broker=amqp://rabbitmq", "--port=8888"]
    depends_on:
      - celery
  db:
    container_name: gallop_db
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file: ./env/dev/.env
  pgadmin:
    container_name: gallop_pgadmin
    image: dpage/pgadmin4
    depends_on:
      - db
    env_file: ./env/dev/.pgadmin
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - "5050:8000"
  celery:
    build: ./app
    command: celery -A gallop worker -l debug
    links:
      - redis
    env_file: ./env/dev/.env
    volumes:
      - ./app/:/usr/src/app/
    depends_on:
      - db
      - redis
      - rabbitmq
  celery-beat:
    build: ./app
    command: celery -A gallop beat -l debug --pidfile=
    volumes:
      - ./app/:/usr/src/app/
    links:
      - redis
    env_file: ./env/dev/.env
    depends_on:
      - db
      - redis
      - rabbitmq
  rabbitmq:
    image: rabbitmq:latest
    environment:
      - TZ=Europe/Warsaw
  elasticsearch:
    container_name: gallop_elasticsearch
    image: blacktop/elasticsearch:7.7
    environment:
      - TZ="Europe/Warsaw"
    volumes:
          - esdata:/usr/share/elasticsearch/data
volumes:
  postgres_data:
  esdata:
  static_volume:
  media_volume:
